// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int        @id @default(autoincrement())
  firstname       String
  lastname        String
  email           String     @unique
  password        String
  phone           String?
  address         String?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  // Userâ€™s own listed products (for selling/renting)
  products        Product[]  @relation("UserOwnedProducts")

  // Products this user bought
  boughtProducts  Product[]  @relation("UserBoughtProducts")

  // Rentals (products this user rented from others)
  rentals         Rental[]   @relation("UserRentals")

  @@map("users")
}

model Product {
  id              Int          @id @default(autoincrement())
  title           String
  description     String
  price           Float
  rentPerDay      Float
  viewCount       Int          @default(0)
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt

  // The owner (who created/listed the product)
  ownerId         Int
  owner           User         @relation("UserOwnedProducts", fields: [ownerId], references: [id])

  // If product has been bought
  isSold          Boolean      @default(false)
  buyerId         Int?
  buyer           User?        @relation("UserBoughtProducts", fields: [buyerId], references: [id])

  // Categories (many-to-many)
  categories      ProductCategory[]

  // Rental history for this product
  rentals         Rental[]     @relation("ProductRentals")

  @@map("products")
}

model Category {
  id          Int                @id @default(autoincrement())
  name        String              @unique
  products    ProductCategory[]

  @@map("categories")
}

model ProductCategory {
  productId   Int
  categoryId  Int
  product     Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  category    Category  @relation(fields: [categoryId], references: [id])

  @@id([productId, categoryId])
  @@map("product_categories")
}

model Rental {
  id          Int       @id @default(autoincrement())
  productId   Int
  renterId    Int
  startDate   DateTime
  endDate     DateTime
  createdAt   DateTime  @default(now())

  product     Product   @relation("ProductRentals", fields: [productId], references: [id])
  renter      User      @relation("UserRentals", fields: [renterId], references: [id])

  @@map("rentals")
}
